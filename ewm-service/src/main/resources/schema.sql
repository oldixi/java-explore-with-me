DROP TABLE IF EXISTS users, categories, locations, events, requests, compilations, compilations_events CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_users PRIMARY KEY (id),
  CONSTRAINT uq_users_email UNIQUE (email),
  CONSTRAINT uq_users_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS categories (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(256) NOT NULL,
  CONSTRAINT pk_categories PRIMARY KEY (id),
  CONSTRAINT uq_categories_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  lat FLOAT,
  lon FLOAT,
  CONSTRAINT pk_locations PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS compilations (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR(256) NOT NULL,
  pinned BOOLEAN,
  CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR(120),
  annotation VARCHAR(2000),
  description VARCHAR(7000),
  event_date TIMESTAMP WITHOUT TIME ZONE,
  created_on TIMESTAMP WITHOUT TIME ZONE,
  published_on TIMESTAMP WITHOUT TIME ZONE,
  confirmed_requests INTEGER,
  participant_limit INTEGER,
  views INTEGER,
  paid BOOLEAN,
  request_moderation BOOLEAN,
  state VARCHAR(50),
  category_id INTEGER,
  initiator_id INTEGER,
  location_id INTEGER,
  CONSTRAINT pk_events PRIMARY KEY (id),
  CONSTRAINT fk_events_to_categories FOREIGN KEY (category_id) REFERENCES categories(id),
  CONSTRAINT fk_events_to_users FOREIGN KEY (initiator_id) REFERENCES users(id),
  CONSTRAINT fk_events_to_locations FOREIGN KEY (location_id) REFERENCES locations(id)
);

CREATE TABLE IF NOT EXISTS compilations_events (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  compilation_id INTEGER NOT NULL,
  event_id INTEGER NOT NULL,
  CONSTRAINT fk_compilations_events_to_events FOREIGN KEY (event_id) REFERENCES events(id),
  CONSTRAINT fk_compilations_events_to_compilations FOREIGN KEY (compilation_id) REFERENCES compilations(id)
);

CREATE TABLE IF NOT EXISTS requests (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  status VARCHAR(50),
  created TIMESTAMP WITHOUT TIME ZONE,
  event_id INTEGER,
  requester_id INTEGER,
  CONSTRAINT pk_requests PRIMARY KEY (id),
  CONSTRAINT fk_requests_to_events FOREIGN KEY (event_id) REFERENCES events(id),
  CONSTRAINT fk_requests_to_users FOREIGN KEY (requester_id) REFERENCES users(id)
);